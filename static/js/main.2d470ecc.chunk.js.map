{"version":3,"sources":["site-config.js","components/Shared/index.js","store/constants.js","components/Shared/Loader/Loader.js","utils/apiHelper.js","api/movie.js","api/person.js","store/actions/movies.js","store/actions/movieDetails.js","store/actions/personDetails.js","store/dispatchers/movies.js","store/dispatchers/movieDetails.js","store/dispatchers/personDetails.js","components/MoviesList/MoviesList.js","components/Home/Home.js","components/index.js","Error.js","App.js","store/reducers/movies.js","store/reducers/movieDetails.js","store/reducers/personDetails.js","store/reducers/index.js","index.js"],"names":["API_URL","API_KEY","MoviePosterBasePath","MovieBannerBasePath","MainNavBar","React","lazy","Banner","MovieCard","DataNotFound","Loader","PersonCard","SELECT_MOVIE_LIST","GET_MOVIES","FETCH_MOVIES","FETCH_MOVIE_DETAILS","GET_MOVIE_DETAILS","SELECT_MOVIE_ID","FETCH_PERSON_DETAILS","GET_PERSON_DETAILS","SELECT_PERSON_ID","memo","Fragment","className","animation","variant","axios","baseURL","response","use","error","status","window","location","href","Promise","reject","apiKey","fetchMovies","storeName","dispatch","requestMovies","API","get","then","receiveMovies","data","searchMovies","movie","results","length","returnMoviesNotFound","shouldFetchMovies","state","details","moviesReducer","Array","isArray","Object","keys","peekMovies","getState","peekSearchMovies","fetchMovieDetails","requestMovieDetails","movieId","movieDetail","movieCredits","all","getMovieDetail","generalDetails","castAndCrewDetails","receiveMovieDetails","returnMovieDetailsNotFound","peekMovieDetails","movieDetailsReducer","shouldFetchMovieDetails","fetchPersonDetails","requestPersonDetails","personId","personDetail","personCredits","getPersonDetail","receivePersonDetails","returnPersonDetailsNotFound","peekPersonDetails","personDetailsReducer","shouldFetchPersonDetails","selectMovieStore","type","isEmpty","selectMovieId","selectPersonId","MoviesList","this","props","selectedMovieList","isFetching","movies","firstMovie","background","backdrop_path","title","original_title","tagline","overview","releaseDate","Date","release_date","getFullYear","toString","Container","fluid","Row","map","key","id","Component","connect","page","total_pages","total_results","Home","Col","Movie","Person","Error","App","fallback","path","exact","component","initialMovieListState","moviesListReducer","action","movieInfoReducer","initialPersonState","personInfoReducer","rootReducer","combineReducers","selectedMovieId","selectedPersonId","middleware","thunk","store","createStore","reducer","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d470ecc.chunk.js","sourcesContent":["const API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"fea7ef221a27350e466d4821c9732609\";\n\nconst MoviePosterBasePath = \"https://image.tmdb.org/t/p/w440_and_h660_face\";\nconst MovieBannerBasePath = \"http://image.tmdb.org/t/p/w1280\";\n\nexport { API_URL, API_KEY, MoviePosterBasePath, MovieBannerBasePath };\n","import React from \"react\";\n\nconst MainNavBar = React.lazy(() => import(\"./MainNavBar/MainNavbar\"));\nconst Banner = React.lazy(() => import(\"./Banner/Banner\"));\nconst MovieCard = React.lazy(() => import(\"./MovieCard/MovieCard\"));\nconst DataNotFound = React.lazy(() => import(\"./DataNotFound/DataNotFound\"));\nconst Loader = React.lazy(() => import(\"./Loader/Loader\"));\nconst PersonCard = React.lazy(() => import(\"./PersonCard/PersonCard\"));\n\nexport { MainNavBar, Banner, MovieCard, DataNotFound, Loader, PersonCard };\n","export const SELECT_MOVIE_LIST = \"SELECT_MOVIE_LIST\";\nexport const GET_MOVIES = \"GET_MOVIES\";\nexport const FETCH_MOVIES = \"FETCH_MOVIES\";\n\nexport const FETCH_MOVIE_DETAILS = \"FETCH_MOVIE_DETAILS\";\nexport const GET_MOVIE_DETAILS = \"GET_MOVIE_DETAILS\";\nexport const SELECT_MOVIE_ID = \"SELECT_MOVIE_ID\";\n\nexport const FETCH_PERSON_DETAILS = \"FETCH_PERSON_DETAILS\";\nexport const GET_PERSON_DETAILS = \"GET_PERSON_DETAILS\";\nexport const SELECT_PERSON_ID = \"SELECT_PERSON_ID\";\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nimport \"./Loader.scss\";\n\nconst Loader = () => {\n  return (\n    <React.Fragment>\n      <div className=\"loader\">\n        <div className=\"align-self-center\">\n          <Spinner animation=\"grow\" variant=\"success\" />\n          <Spinner animation=\"grow\" variant=\"danger\" />\n          <Spinner animation=\"grow\" variant=\"warning\" />\n          <Spinner animation=\"grow\" variant=\"info\" />\n          <Spinner animation=\"grow\" variant=\"dark\" />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Loader);\n","import * as axios from \"axios\";\nimport { API_URL } from \"../site-config\";\n\naxios.defaults.baseURL = API_URL;\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    switch (error.response.status) {\n      case 401:\n        break;\n      case 403:\n        window.location.href = \"/error\";\n        break;\n      default:\n        return;\n    }\n    return Promise.reject(error.response);\n  }\n);\n\nexport default axios;\n","import { API_KEY, API_URL } from \"../site-config\";\nimport API from \"../utils/apiHelper\";\n\nconst movieBasePath = \"movie\";\nconst apiKey = `api_key=${API_KEY}`;\n\n/**\n * GET POPULAR MOVIES LIST\n */\nconst getPopularMoviesList = () => {\n  return API.get(`${API_URL}${movieBasePath}/popular?${apiKey}`);\n};\n\n/**\n * Get movie and its credit details\n * \n * @param {String} movieId \n */\nconst getMovieDetail = (movieId) => {\n  const movieDetail = API.get(\n    `${API_URL}${movieBasePath}/${movieId}?${apiKey}`\n  );\n  const movieCredits = API.get(\n    `${API_URL}${movieBasePath}/${movieId}/credits?${apiKey}`\n  );\n\n  return Promise.all([movieDetail, movieCredits]);\n};\n\n/**\n * Search for a movie\n * \n * @param {String} movie \n */\nconst searchMovie = (movie) => {\n  return API.get(`${API_URL}search/${movieBasePath}?${apiKey}&query=${movie}`);\n};\n\nexport { getPopularMoviesList, getMovieDetail, searchMovie };\n","import { API_KEY, API_URL } from \"../site-config\";\nimport API from \"../utils/apiHelper\";\n\nconst personBasePath = \"person\";\nconst apiKey = `api_key=${API_KEY}`;\n\n/**\n * Get person & credits detail\n * \n * @param {String} personId \n */\nconst getPersonDetail = (personId) => {\n  const personDetail = API.get(\n    `${API_URL}${personBasePath}/${personId}?${apiKey}`\n  );\n  const personCredits = API.get(\n    `${API_URL}${personBasePath}/${personId}/credits?${apiKey}`\n  );\n  return Promise.all([personDetail, personCredits]);\n};\n\nexport { getPersonDetail };\n","import { getPopularMoviesList, searchMovie } from \"api/\";\nimport {\n  receiveMovies,\n  requestMovies,\n  returnMoviesNotFound,\n} from \"../dispatchers\";\n\n/**\n * Fetch movie details\n * \n * @param {String} storeName\n */\nconst fetchMovies = (storeName) => (dispatch) => {\n  dispatch(requestMovies(storeName));\n\n  return getPopularMoviesList().then((response) => {\n    dispatch(receiveMovies(response.data, storeName));\n  });\n};\n\n/**\n * Search for movie\n * \n * @param {string} storeName\n */\nconst searchMovies = (storeName) => (dispatch) => {\n  dispatch(requestMovies(storeName));\n\n  return searchMovie(storeName).then((response) => {\n    if (response && response.data && response.data.results.length > 0) {\n      dispatch(receiveMovies(response.data, storeName));\n    } else {\n      dispatch(returnMoviesNotFound(storeName));\n    }\n  });\n};\n\n/**\n * Check if data is present in store\n * \n * @param {*} state\n * @param {String} storeName\n */\nexport const shouldFetchMovies = (state, storeName) => {\n  const { moviesReducer } = state;\n  const details = moviesReducer[storeName];\n\n  if (Array.isArray(details) && !details.length) {\n    return true;\n  }\n\n  return !details || Object.keys(details).length < 1;\n};\n\n/**\n * Peek Movie data\n * \n * @param {String} storeName\n */\nexport const peekMovies = (storeName) => (dispatch, getState) => {\n  if (shouldFetchMovies(getState(), storeName)) {\n    return dispatch(fetchMovies(storeName));\n  }\n};\n\n/**\n * Peek and Search for Movie\n * \n * @param {String} storeName\n */\nexport const peekSearchMovies = (storeName) => (dispatch, getState) => {\n  if (shouldFetchMovies(getState(), storeName)) {\n    return dispatch(searchMovies(storeName));\n  }\n};\n","import { getMovieDetail } from \"api\";\nimport {\n  requestMovieDetails,\n  receiveMovieDetails,\n  returnMovieDetailsNotFound,\n} from \"../dispatchers\";\n\n/**\n * Fetch movie details with storename\n * \n * @param {String} storeName \n */\nconst fetchMovieDetails = (storeName) => (dispatch) => {\n  dispatch(requestMovieDetails(storeName));\n\n  return getMovieDetail(storeName).then((response) => {\n    let [generalDetails, castAndCrewDetails] = response;\n    if (generalDetails && castAndCrewDetails) {\n      generalDetails = generalDetails.data;\n      castAndCrewDetails = castAndCrewDetails.data;\n      dispatch(\n        receiveMovieDetails({ generalDetails, castAndCrewDetails }, storeName)\n      );\n    } else {\n      dispatch(returnMovieDetailsNotFound(storeName));\n    }\n  });\n};\n\n/**\n * Check if data exists in store\n * \n * @param {*} state \n * @param {String} storeName \n */\nexport const shouldFetchMovieDetails = (state, storeName) => {\n  const { movieDetailsReducer } = state;\n  const details = movieDetailsReducer[storeName];\n\n  if (Array.isArray(details) && !details.length) {\n    return true;\n  }\n\n  return !details || Object.keys(details).length < 1;\n};\n\n/**\n * Peek for movie details\n * \n * @param {String} storeName \n */\nexport const peekMovieDetails = (storeName) => (dispatch, getState) => {\n  if (shouldFetchMovieDetails(getState(), storeName)) {\n    return dispatch(fetchMovieDetails(storeName));\n  }\n};\n","import { getPersonDetail } from \"api\";\nimport {\n  requestPersonDetails,\n  receivePersonDetails,\n  returnPersonDetailsNotFound,\n} from \"../dispatchers\";\n\n/**\n * Fetch person details\n * \n * @param {String} storeName \n */\nconst fetchPersonDetails = (storeName) => (dispatch) => {\n  dispatch(requestPersonDetails(storeName));\n\n  return getPersonDetail(storeName).then((response) => {\n    let [generalDetails, personCredits] = response;\n    if (generalDetails && personCredits) {\n      generalDetails = generalDetails.data;\n      personCredits = personCredits.data;\n      dispatch(\n        receivePersonDetails({ generalDetails, personCredits }, storeName)\n      );\n    } else {\n      dispatch(returnPersonDetailsNotFound(storeName));\n    }\n  });\n};\n\n/**\n * Check the store if data is present\n * \n * @param {*} state \n * @param {String} storeName \n */\nexport const shouldFetchPersonDetails = (state, storeName) => {\n  const { personDetailsReducer } = state;\n  const details = personDetailsReducer[storeName];\n\n  if (Array.isArray(details) && !details.length) {\n    return true;\n  }\n\n  return !details || Object.keys(details).length < 1;\n};\n\n/**\n * Peek for person details\n * \n * @param {String} storeName \n */\nexport const peekPersonDetails = (storeName) => (dispatch, getState) => {\n  if (shouldFetchPersonDetails(getState(), storeName)) {\n    return dispatch(fetchPersonDetails(storeName));\n  }\n};\n","import { FETCH_MOVIES, GET_MOVIES, SELECT_MOVIE_LIST } from \"../constants\";\n\nexport const selectMovieStore = (storeName) => ({\n  type: SELECT_MOVIE_LIST,\n  storeName,\n});\n\nexport const requestMovies = (storeName) => ({\n  type: FETCH_MOVIES,\n  storeName,\n});\n\nexport const receiveMovies = (data, storeName) => ({\n  type: GET_MOVIES,\n  storeName,\n  ...data,\n});\n\nexport const returnMoviesNotFound = (storeName) => ({\n  type: GET_MOVIES,\n  storeName,\n  isEmpty: true,\n});\n","import {\n  FETCH_MOVIE_DETAILS,\n  GET_MOVIE_DETAILS,\n  SELECT_MOVIE_ID,\n} from \"store/constants\";\n\nexport const selectMovieId = (storeName) => ({\n  type: SELECT_MOVIE_ID,\n  storeName,\n});\n\nexport const requestMovieDetails = (storeName) => ({\n  type: FETCH_MOVIE_DETAILS,\n  storeName,\n});\n\nexport const receiveMovieDetails = (data, storeName) => ({\n  type: GET_MOVIE_DETAILS,\n  storeName,\n  ...data,\n});\n\nexport const returnMovieDetailsNotFound = (storeName) => ({\n  type: GET_MOVIE_DETAILS,\n  storeName,\n  isEmpty: true,\n});\n","import {\n  FETCH_PERSON_DETAILS,\n  GET_PERSON_DETAILS,\n  SELECT_PERSON_ID,\n} from \"store/constants\";\n\nexport const selectPersonId = (storeName) => ({\n  type: SELECT_PERSON_ID,\n  storeName,\n});\n\nexport const requestPersonDetails = (storeName) => ({\n  type: FETCH_PERSON_DETAILS,\n  storeName,\n});\n\nexport const receivePersonDetails = (data, storeName) => ({\n  type: GET_PERSON_DETAILS,\n  storeName,\n  ...data,\n});\n\nexport const returnPersonDetailsNotFound = (storeName) => ({\n  type: GET_PERSON_DETAILS,\n  storeName,\n  isEmpty: true,\n});\n","// External Dependencies\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Container, Row } from \"react-bootstrap\";\n\n// Internal Dependencies\nimport { peekMovies } from \"store/actions\";\nimport { MovieCard, Banner, Loader, DataNotFound } from \"../Shared\";\n\nimport \"./MoviesList.scss\";\n\nclass MoviesList extends React.Component {\n  static propTypes = {\n    movies: PropTypes.array.isRequired,\n    page: PropTypes.number.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    total_pages: PropTypes.number.isRequired,\n    total_results: PropTypes.number.isRequired,\n    selectedMovieList: PropTypes.string.isRequired,\n  };\n\n  componentDidMount() {\n    const { dispatch, selectedMovieList } = this.props;\n    dispatch(peekMovies(selectedMovieList));\n  }\n\n  render() {\n    const { isEmpty, isFetching, movies, selectedMovieList } = this.props;\n\n    if (isFetching) {\n      return <Loader />;\n    }\n\n    if (isEmpty || movies.length < 1) {\n      return <DataNotFound />;\n    }\n\n    const firstMovie = movies[0];\n    return (\n      <React.Fragment>\n        <Banner\n          background={firstMovie.backdrop_path}\n          title={firstMovie.original_title}\n          tagline={firstMovie.tagline}\n          overview={firstMovie.overview}\n          releaseDate={new Date(firstMovie.release_date)\n            .getFullYear()\n            .toString()}\n        />\n        <Container fluid className=\"mt-4 movie-list\">\n          <h4 className=\"movies-list-title\">Results for {selectedMovieList}</h4>\n          <Row>\n            {movies.map((movie) => (\n              <MovieCard data={movie} key={movie.id} className=\"movie-card\" />\n            ))}\n          </Row>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { selectedMovieList, moviesReducer } = state;\n\n  const {\n    results,\n    page,\n    isFetching,\n    isEmpty,\n    total_pages,\n    total_results,\n  } = moviesReducer[selectedMovieList] || {\n    isFetching: true,\n    page: 1,\n    results: [],\n    total_pages: 1,\n    total_results: 1,\n  };\n\n  return {\n    movies: results,\n    page,\n    isFetching,\n    total_pages,\n    isEmpty,\n    total_results,\n    selectedMovieList,\n  };\n};\n\nexport default connect(mapStateToProps)(MoviesList);\n","// Internal Dependencies\nimport React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// External Dependencies\nimport MoviesList from \"../MoviesList/MoviesList\";\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Row>\n          <Col>\n            <MoviesList />\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport Home from \"./Home/Home\";\n\nconst Movie = React.lazy(() => import(\"./Movie/Movie\"));\nconst Person = React.lazy(() => import(\"./Person/Person\"));\n\nexport { Home, Movie, Person };\n","import React from \"react\";\n\nclass Error extends React.Component {\n  render() {\n    return <h1>Error 404</h1>;\n  }\n}\n\nexport default Error;\n","import React, { Suspense } from \"react\";\nimport \"./App.scss\";\nimport { Route } from \"react-router-dom\";\nimport { Movie, Person, Home } from \"components\";\nimport Error from \"./Error\";\nimport { MainNavBar } from \"components/Shared\";\nimport Loader from \"./components/Shared/Loader/Loader\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Suspense fallback={<Loader />}>\n        <MainNavBar />\n        <div className=\"route-view\">\n          <Route path=\"/\" exact component={Home}></Route>\n          <Route path=\"/movie/:movieId\" exact component={Movie}></Route>\n          <Route path=\"/person/:personId\" exact component={Person}></Route>\n          <Route path=\"/error\" exact component={Error}></Route>\n        </div>\n      </Suspense>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { SELECT_MOVIE_LIST, FETCH_MOVIES, GET_MOVIES } from \"../constants\";\n\nconst initialMovieListState = {\n  isFetching: true,\n  isEmpty: false,\n  page: 0,\n  total_pages: 0,\n  total_results: 0,\n  results: [],\n};\n\nexport const selectedMovieList = (state = \"popular\", action) => {\n  switch (action.type) {\n    case SELECT_MOVIE_LIST:\n      return action.storeName;\n    default:\n      return state;\n  }\n};\n\nconst moviesListReducer = (state = initialMovieListState, action) => {\n  switch (action.type) {\n    case FETCH_MOVIES:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case GET_MOVIES:\n      return {\n        ...state,\n        isFetching: false,\n        ...action,\n      };\n    default:\n      return state;\n  }\n};\n\nconst moviesReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_MOVIES:\n    case GET_MOVIES:\n      return {\n        ...state,\n        [action.storeName]: moviesListReducer(state[action.storeName], action),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default moviesReducer;\n","import {\n  FETCH_MOVIE_DETAILS,\n  GET_MOVIE_DETAILS,\n  SELECT_MOVIE_ID,\n} from \"store/constants\";\n\nconst initialMovieListState = {\n  isFetching: true,\n  isEmpty: false,\n};\n\nexport const selectedMovieId = (state = \"\", action) => {\n  switch (action.type) {\n    case SELECT_MOVIE_ID:\n      return action.storeName;\n    default:\n      return state;\n  }\n};\n\nconst movieInfoReducer = (state = initialMovieListState, action) => {\n  switch (action.type) {\n    case FETCH_MOVIE_DETAILS:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case GET_MOVIE_DETAILS:\n      return {\n        ...state,\n        isFetching: false,\n        ...action,\n      };\n    default:\n      return state;\n  }\n};\n\nconst movieDetailsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_MOVIE_DETAILS:\n    case GET_MOVIE_DETAILS:\n      return {\n        ...state,\n        [action.storeName]: movieInfoReducer(state[action.storeName], action),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default movieDetailsReducer;\n","import {\n  FETCH_PERSON_DETAILS,\n  GET_PERSON_DETAILS,\n  SELECT_PERSON_ID,\n} from \"store/constants\";\n\nconst initialPersonState = {\n  isFetching: true,\n  isEmpty: false,\n};\n\nexport const selectedPersonId = (state = \"\", action) => {\n  switch (action.type) {\n    case SELECT_PERSON_ID:\n      return action.storeName;\n    default:\n      return state;\n  }\n};\n\nconst personInfoReducer = (state = initialPersonState, action) => {\n  switch (action.type) {\n    case FETCH_PERSON_DETAILS:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case GET_PERSON_DETAILS:\n      return {\n        ...state,\n        isFetching: false,\n        ...action,\n      };\n    default:\n      return state;\n  }\n};\n\nconst personDetailsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_PERSON_DETAILS:\n    case GET_PERSON_DETAILS:\n      return {\n        ...state,\n        [action.storeName]: personInfoReducer(state[action.storeName], action),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default personDetailsReducer;\n","import { combineReducers } from \"redux\";\nimport moviesReducer, { selectedMovieList } from \"./movies\";\nimport movieDetailsReducer, { selectedMovieId } from \"./movieDetails\";\nimport personDetailsReducer, { selectedPersonId } from \"./personDetails\";\n\nconst rootReducer = combineReducers({\n  moviesReducer,\n  selectedMovieList,\n  movieDetailsReducer,\n  selectedMovieId,\n  personDetailsReducer,\n  selectedPersonId,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducer from \"store/reducers\";\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(reducer, applyMiddleware(...middleware));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
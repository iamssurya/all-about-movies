{"version":3,"sources":["components/Person/Person.js"],"names":["Person","this","props","dispatch","personId","match","params","selectPersonId","peekPersonDetails","isFetching","isEmpty","personDetails","personCredits","name","birthday","place_of_birth","also_known_as","biography","cast","Fragment","className","xs","length","join","fluid","map","movie","data","key","id","React","Component","withRouter","connect","state","selectedPersonId","personDetailsReducer","detail","generalDetails"],"mappings":"2QAcMA,G,yLAsBiB,IAAD,EAMdC,KAAKC,MAJPC,EAFgB,EAEhBA,SAEYC,EAJI,EAGhBC,MACEC,OAAUF,SAIVA,IACFD,EAASI,YAAeH,IACxBD,EAASK,YAAkBJ,O,+BAIrB,IAAD,EACuDH,KAAKC,MAA3DO,EADD,EACCA,WAAYC,EADb,EACaA,QAASC,EADtB,EACsBA,cAAeC,EADrC,EACqCA,cAE5C,GAAIH,EACF,OAAO,kBAAC,IAAD,MAGT,GAAIC,IAAYC,EACd,OAAO,kBAAC,IAAD,MARF,IAYLE,EAKEF,EALFE,KACAC,EAIEH,EAJFG,SACAC,EAGEJ,EAHFI,eACAC,EAEEL,EAFFK,cACAC,EACEN,EADFM,UAGMC,EAASN,EAATM,KAER,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAWC,UAAU,iBACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,GACP,kBAAC,IAAeV,IAElB,kBAAC,IAAD,CAAKU,GAAI,EAAGD,UAAU,eACnBP,GAAQ,4BAAKA,GACbC,GAAY,uBAAGM,UAAU,YAAb,WAAiCN,GAC7CC,GACC,uBAAGK,UAAU,kBAAkBL,GAEhCC,GAAiBA,EAAcM,OAAS,GACvC,uBAAGF,UAAU,iBAAb,iBACiBJ,EAAcO,KAAK,MAGrCN,GAAa,uBAAGG,UAAU,aAAaH,MAI7CC,GAAQA,EAAKI,OAAS,GACrB,kBAAC,IAAD,CAAWE,OAAK,GACd,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,wBAAIJ,UAAU,qBAAd,WAA2CF,EAAKI,OAAhD,KACA,kBAAC,IAAD,KACGJ,EAAKO,KAAI,SAACC,GAAD,OACR,kBAAC,IAAD,CACEC,KAAMD,EACNE,IAAKF,EAAMG,GACXT,UAAU,2B,GAzFXU,IAAMC,YA2HZC,sBAAWC,aArBF,SAACC,GAAW,IAC1BC,EAA2CD,EAA3CC,iBAAkBC,EAAyBF,EAAzBE,qBADO,EAI/BA,EAAqBD,KAAqB,EADpC1B,EAHyB,EAGzBA,WAAYC,EAHa,EAGbA,QAEd2B,EAASD,EAAqBD,GAChCxB,EAAgB,GAChBC,EAAgB,GAMpB,OALIyB,GAAUA,EAAOC,gBAAkBD,EAAOzB,gBAC5CD,EAAgB0B,EAAOC,eACvB1B,EAAgByB,EAAOzB,eAGlB,CACLD,gBACAC,gBACAH,aACAC,aAIsBuB,CAAyBjC","file":"static/js/8.3421827a.chunk.js","sourcesContent":["// External Dependencies\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { Container, Col, Row } from \"react-bootstrap\";\n\n// Internal Dependencies\nimport { peekPersonDetails } from \"store/actions\";\nimport { selectPersonId } from \"store/dispatchers\";\nimport { DataNotFound, Loader, MovieCard, PersonCard } from \"components/Shared\";\n\nimport \"./Person.scss\";\n\nclass Person extends React.Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        personId: PropTypes.string.isRequired,\n      }),\n    }),\n    isFetching: PropTypes.bool,\n    isEmpty: PropTypes.bool,\n    personDetails: PropTypes.shape({\n      name: PropTypes.string,\n      birthday: PropTypes.string,\n      place_of_birth: PropTypes.string,\n      also_known_as: PropTypes.array,\n      biography: PropTypes.string,\n    }),\n    personCredits: PropTypes.shape({\n      cast: PropTypes.array,\n      crew: PropTypes.array,\n    }),\n  };\n\n  componentDidMount() {\n    const {\n      dispatch,\n      match: {\n        params: { personId },\n      },\n    } = this.props;\n\n    if (personId) {\n      dispatch(selectPersonId(personId));\n      dispatch(peekPersonDetails(personId));\n    }\n  }\n\n  render() {\n    const { isFetching, isEmpty, personDetails, personCredits } = this.props;\n\n    if (isFetching) {\n      return <Loader />;\n    }\n\n    if (isEmpty || !personDetails) {\n      return <DataNotFound />;\n    }\n\n    const {\n      name,\n      birthday,\n      place_of_birth,\n      also_known_as,\n      biography,\n    } = personDetails;\n\n    const { cast } = personCredits;\n\n    return (\n      <React.Fragment>\n        <Container className=\"person-detail\">\n          <Row>\n            <Col xs={4}>\n              <PersonCard {...personDetails} />\n            </Col>\n            <Col xs={8} className=\"person-info\">\n              {name && <h3>{name}</h3>}\n              {birthday && <p className=\"birthday\">Born on {birthday}</p>}\n              {place_of_birth && (\n                <p className=\"place-of-birth\">{place_of_birth}</p>\n              )}\n              {also_known_as && also_known_as.length > 0 && (\n                <p className=\"also-known-as\">\n                  Also Known As {also_known_as.join(\",\")}\n                </p>\n              )}\n              {biography && <p className=\"biography\">{biography}</p>}\n            </Col>\n          </Row>\n        </Container>\n        {cast && cast.length > 0 && (\n          <Container fluid>\n            <Row>\n              <Col>\n                <h4 className=\"movies-list-title\">Movies ({cast.length})</h4>\n                <Row>\n                  {cast.map((movie) => (\n                    <MovieCard\n                      data={movie}\n                      key={movie.id}\n                      className=\"movie-card\"\n                    />\n                  ))}\n                </Row>\n              </Col>\n            </Row>\n          </Container>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { selectedPersonId, personDetailsReducer } = state;\n\n  const { isFetching, isEmpty } =\n    personDetailsReducer[selectedPersonId] || true;\n  const detail = personDetailsReducer[selectedPersonId];\n  let personDetails = {};\n  let personCredits = {};\n  if (detail && detail.generalDetails && detail.personCredits) {\n    personDetails = detail.generalDetails;\n    personCredits = detail.personCredits;\n  }\n\n  return {\n    personDetails,\n    personCredits,\n    isFetching,\n    isEmpty,\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(Person));\n"],"sourceRoot":""}